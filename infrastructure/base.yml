AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample with PHP on Ubuntu'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

Resources:
  WebAppProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - ec2-demo
  WebApp:
      Type: AWS::EC2::Instance
      Metadata:
        AWS::CloudFormation::Init:
          config:
            packages:
              apt:
                nginx: []
                php7.2: []
                php7.2-fpm: []
                php7.2-common: []
                php7.2-mysql: []
                php7.2-gd: []
                php7.2-xml: []
                php7.2-mbstring: []
                composer: []
                zip: []
                php7.2-zip: []
            sources:
              /var/www/poultry: "https://github.com/jkapuscik2/poultry/zipball/master"
      Properties:
        InstanceType: t2.micro
        SecurityGroups:
          - Ref: WebDMZ
        KeyName:
          Ref: KeyName
        ImageId: ami-02df9ea15c1778c9c
        UserData:
          Fn::Base64:
            !Sub |
                #!/bin/bash

                sudo apt-get -y update
                echo "dupa" >> /home/ubuntu/start.log
                sudo apt-get -y remove apache2
                cd /home/ubuntu
                mkdir aws-cfn-bootstrap-latest
                curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1
                apt-get install python-pip -y
                pip install aws-cfn-bootstrap-latest/
                cfn-init --verbose --stack ${AWS::StackName} --resource WebApp --region ${AWS::Region}
                cd /var/www/poultry
                export COMPOSER_HOME="$HOME/.config/composer";
                composer install --optimize-autoloader --no-dev
                chown www-data:www-data /var/www -R
                sudo find /var/www/poultry -type f -exec chmod 644 {} \;
                sudo find /var/www/poultry -type d -exec chmod 755 {} \;
                sudo chown -R www-data:www-data /var/www/poultry/vendor
                sudo chown -R www-data:www-data /var/www/poultry/storage
                cp /var/www/poultry/infrastructure/default /etc/nginx/sites-available/default
                service nginx restart
  WebDMZ:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH and WEB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: WebApp
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value:
      Fn::GetAtt:
        - WebApp
        - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value:
      Fn::GetAtt:
        - WebApp
        - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
        - WebApp
        - PublicIp
